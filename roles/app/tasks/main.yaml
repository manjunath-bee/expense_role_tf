- name: disable current nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install "coffee-script" node.js package globally
  ansible.builtin.package:
    name: "{{ item }}"
  loop:
    - mysql
    - nodejs
    
    
- name: Install bottle for Python 3.3 specifically, using the 'pip3.3' executable
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
    - cryptography
    - PyMYSQL
    
- name: Add the user 'expense'
  ansible.builtin.user:
    name: expense

# - name: Create a directory if it does not exist
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download foo.conf
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: Unarchive a file that is already on the remote machine
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: Run tasks/other.yaml instead of 'main'
  ansible.builtin.include_role:
    name: common
    tasks_from: main

- name: Install "coffee-script" node.js package.
  community.general.npm:
    name: npm
    path: /app

- name: Copy file with owner and permissions
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Restart service cron on centos, in all cases, also issue daemon-reload to pick up config changes
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    daemon_reload: true
    enabled: true

- name: Import dump.sql with specific latin1 encoding
  community.mysql.mysql_db:
    state: import
    login_host: "{{ MYSQL_HOST }}"
    login_user: root
    login_password: ExpenseApp@1
    name: all
    target: /app/schema/backend.sql

- name: Restart service httpd, in all cases
  ansible.builtin.service:
    name: backend
    state: restarted